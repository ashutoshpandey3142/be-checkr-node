{"/home/Ashp/Documents/be-checkr-node/backend/src/middleware/auth.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/middleware/auth.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":0},"end":{"line":22,"column":2}},"6":{"start":{"line":10,"column":27},"end":{"line":10,"column":55}},"7":{"start":{"line":11,"column":22},"end":{"line":11,"column":102}},"8":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":69}},"10":{"start":{"line":15,"column":8},"end":{"line":20,"column":11}},"11":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":74}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":43},"end":{"line":21,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":64},"end":{"line":15,"column":65}},"loc":{"start":{"line":15,"column":79},"end":{"line":20,"column":9}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":102}},"type":"cond-expr","locations":[{"start":{"line":11,"column":69},"end":{"line":11,"column":75}},{"start":{"line":11,"column":78},"end":{"line":11,"column":102}}],"line":11},"4":{"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":66}},"type":"binary-expr","locations":[{"start":{"line":11,"column":22},"end":{"line":11,"column":41}},{"start":{"line":11,"column":45},"end":{"line":11,"column":66}}],"line":11},"5":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"6":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":3,"9":1,"10":2,"11":2,"12":1,"13":1},"f":{"0":1,"1":3,"2":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,2],"4":[3,3],"5":[1,2],"6":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/middleware/auth.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/middleware/auth.ts"],"names":[],"mappings":";;;;;;AACA,gEAA8B;AAEjB,QAAA,cAAc,GAAG;IAC1B,iBAAiB,EAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACpE,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,iBAAiB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YAC/C,IAAI,GAAG,EAAE,CAAC;gBACN,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC;YAC9D,CAAC;YACD,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA","sourcesContent":["import { NextFunction, Request, Response } from \"express\"\nimport jwt from 'jsonwebtoken'\n\nexport const AuthMiddleware = {\n    authenticateToken : (req: Request, res: Response, next: NextFunction) => {\n        const authHeader = req.headers['authorization'];\n        const token = authHeader?.split(' ')[1];\n    \n        if (!token) {\n            return res.status(401).json({ message: 'Unauthorized' });\n        }\n    \n        jwt.verify(token, 'your-secret-key', (err, user) => {\n            if (err) {\n                return res.status(403).json({ message: 'Invalid token' });\n            }\n            next();\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac6f4eb489a3b1f0d2347bf5dc5d9d5f682b92fc","contentHash":"dde9c94402b86a1e8e8e5106adba81205ab69dcb11b006bdb339fc3b7079d29b"},"/home/Ashp/Documents/be-checkr-node/backend/src/models/adverse_action.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/models/adverse_action.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":59}},"7":{"start":{"line":43,"column":22},"end":{"line":68,"column":2}},"8":{"start":{"line":69,"column":0},"end":{"line":69,"column":38}},"9":{"start":{"line":70,"column":0},"end":{"line":70,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/models/adverse_action.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/models/adverse_action.ts"],"names":[],"mappings":";;;;;;AAAA,yCAAsC;AACtC,qCAAwC;AACxC,4DAAoC;AAUpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AAEH,MAAM,aAAa,GAAG,aAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE;IACtD,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,qBAAS,CAAC,MAAM;KAC/B;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC;QAChC,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACR,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;SACrB;KACF;IACD,aAAa,EAAE;QACb,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KACjB;IACD,cAAc,EAAE;QACd,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;KACjB;CACF,EAAE;IACD,SAAS,EAAE,gBAAgB;IAC3B,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC;AAKM,sCAAa;AAHtB,aAAa,CAAC,SAAS,CAAC,mBAAS,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC","sourcesContent":["import { DataTypes } from \"sequelize\";\nimport { database } from \"../config/db\";\nimport Candidate from \"./candidate\";\n\n\ninterface IAdverseAction {\n  status: 'SCHEDULE';\n  preNoticeDate: Date;\n  postNoticeDate: Date;\n  candidatesId: Buffer;\n}\n\n/**\n * @openapi\n * components:\n *   schemas:\n *     AdverseAction:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *           format: uuid\n *           description: The unique identifier for the adverse action\n *         status:\n *           type: string\n *           enum: [\"SCHEDULE\"]\n *           description: The status of the adverse action\n *         preNoticeDate:\n *           type: string\n *           format: date-time\n *           description: The date and time of the pre-notice for the adverse action\n *         postNoticeDate:\n *           type: string\n *           format: date-time\n *           description: The date and time of the post-notice for the adverse action\n *         candidatesId:\n *           type: string\n *           format: uuid\n *           description: The ID of the candidate associated with the adverse action\n *       required:\n *         - status\n *         - preNoticeDate\n *         - postNoticeDate\n *         - candidatesId\n */\n\nconst AdverseAction = database.define('adverse_action', {\n  id: {\n    type: DataTypes.UUID,\n    primaryKey: true,\n    allowNull: false,\n    defaultValue: DataTypes.UUIDV4\n  },\n  status: {\n    type: DataTypes.ENUM('SCHEDULE'),\n    allowNull: false,\n    validate: {\n      isIn: [['SCHEDULE']]\n    }\n  },\n  preNoticeDate: {\n    type: DataTypes.DATE,\n    allowNull: false\n  },\n  postNoticeDate: {\n    type: DataTypes.DATE,\n    allowNull: false\n  }\n}, {\n  tableName: 'adverse_action',\n  timestamps: false\n});\n\nAdverseAction.belongsTo(Candidate, { foreignKey: 'candidatesId', targetKey: 'id' });\n\n\nexport { AdverseAction, IAdverseAction };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b9888a9fd6a5136d2179ec9fb72084ec50ffcf1b","contentHash":"59e6acd08ae600c4b2413d7deeb0ffc0eef394dd0c25ec120b27860450b8dd37"},"/home/Ashp/Documents/be-checkr-node/backend/src/config/db.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/config/db.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":34}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":34}},"9":{"start":{"line":12,"column":15},"end":{"line":12,"column":34}},"10":{"start":{"line":13,"column":17},"end":{"line":13,"column":38}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":42}},"12":{"start":{"line":15,"column":0},"end":{"line":18,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/config/db.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/config/db.ts"],"names":[],"mappings":";;;;;;AAAA,yCAA8C;AAC9C,oDAA2B;AAC3B,gBAAM,CAAC,MAAM,EAAE,CAAA;AAEf,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAiB,CAAA;AAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAiB,CAAA;AAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAA;AAClC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAoB,CAAA;AACjD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAA;AAG7B,QAAA,QAAQ,GAAG,IAAI,qBAAS,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE;IAC9D,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,QAAQ;CACpB,CAAC,CAAA","sourcesContent":["import { Dialect, Sequelize } from 'sequelize'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nconst dbName = process.env.DB_NAME as string\nconst dbUser = process.env.DB_USER as string\nconst dbHost = process.env.DB_HOST\nconst dbDriver = process.env.DB_DRIVER as Dialect\nconst dbPassword = process.env.DB_PASSWORD\n\n\nexport const database = new Sequelize(dbName, dbUser, dbPassword, {\n    host: dbHost,\n    dialect: dbDriver,\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"01b5adcabb5e7538ccbccc512b19f202177bad40","contentHash":"69d0afdf52273981be1cf11b3386358bbcab4656a4d167cda10fe3d603c9d52a"},"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":36}},"3":{"start":{"line":76,"column":18},"end":{"line":151,"column":2}},"4":{"start":{"line":152,"column":0},"end":{"line":152,"column":28}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate.ts"],"names":[],"mappings":";;AAAA,yCAAsC;AACtC,qCAAwC;AAkBxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsEG;AAEH,MAAM,SAAS,GAAG,aAAQ,CAAC,MAAM,CAAC,WAAW,EAAE;IAC3C,EAAE,EAAE;QACA,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,qBAAS,CAAC,MAAM;KACjC;IAED,IAAI,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;KACnB;IACD,YAAY,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,gBAAgB,CAAC;QACtD,SAAS,EAAE,KAAK;KACnB;IACD,MAAM,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;QACzC,SAAS,EAAE,KAAK;KACnB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;KACnB;IACD,gBAAgB,EAAE;QACd,IAAI,EAAE,qBAAS,CAAC,QAAQ;QACxB,SAAS,EAAE,KAAK;KACnB;IACD,KAAK,EAAE;QACH,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,OAAO,EAAE,IAAI;SAChB;KACJ;IACD,KAAK,EAAE;QACH,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,SAAS,EAAE,IAAI;SAClB;KACJ;IACD,OAAO,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;KACnB;IACD,eAAe,EAAE;QACb,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE;YACN,SAAS,EAAE,IAAI;SAClB;KACJ;IACD,eAAe,EAAE;QACb,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,IAAI;KAClB;IACD,OAAO,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,IAAI;KAClB;IACD,UAAU,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,IAAI;KAClB;IACD,GAAG,EAAE;QACD,IAAI,EAAE,qBAAS,CAAC,QAAQ;QACxB,SAAS,EAAE,KAAK;KACnB;IACD,YAAY,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,IAAI;KAClB;CACJ,EAAE;IACC,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE,KAAK;CACpB,CAAC,CAAC;AAEH,kBAAe,SAAS,CAAC","sourcesContent":["import { DataTypes } from \"sequelize\";\nimport { database } from \"../config/db\";\n\nexport interface ICandidate {\n    name: string;\n    adjudication: '-' | 'ENGAGED' | 'ADVERSE ACTION';\n    status: 'CLEAR' | 'CONSIDER';\n    location: string;\n    application_date: Date;\n    email: string;\n    phone: string;\n    zipcode: string;\n    social_security: string;\n    drivers_license: string;\n    created_at: Date;\n    dob: Date;\n    completed_at: Date;\n}\n\n/**\n * @openapi\n * components:\n *   schemas:\n *     Candidate:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *           format: uuid\n *           description: The unique identifier for the candidate\n *         name:\n *           type: string\n *           description: The name of the candidate\n *         adjudication:\n *           type: string\n *           enum: [\"-\", \"ENGAGED\", \"ADVERSE ACTION\"]\n *           description: The adjudication status of the candidate\n *         status:\n *           type: string\n *           enum: [\"CLEAR\", \"CONSIDER\"]\n *           description: The status of the candidate\n *         location:\n *           type: string\n *           description: The location of the candidate\n *         application_date:\n *           type: string\n *           format: date\n *           description: The application date of the candidate\n *         email:\n *           type: string\n *           format: email\n *           description: The email address of the candidate\n *         phone:\n *           type: string\n *           description: The phone number of the candidate\n *         zipcode:\n *           type: string\n *           description: The zipcode of the candidate\n *         social_security:\n *           type: string\n *           description: The social security number of the candidate\n *         drivers_license:\n *           type: string\n *           description: The driver's license number of the candidate\n *         package:\n *           type: string\n *           description: The package of the candidate\n *         created_at:\n *           type: string\n *           format: date-time\n *           description: The date and time when the candidate was created\n *         dob:\n *           type: string\n *           format: date\n *           description: The date of birth of the candidate\n *         completed_at:\n *           type: string\n *           format: date-time\n *           description: The date and time when the candidate was completed\n *       required:\n *         - name\n *         - adjudication\n *         - status\n *         - location\n *         - application_date\n *         - email\n *         - phone\n *         - zipcode\n *         - dob\n */\n\nconst Candidate = database.define('Candidate', {\n    id: {\n        type: DataTypes.UUID,\n        primaryKey: true,\n        allowNull: false,\n        defaultValue: DataTypes.UUIDV4\n    },\n    \n    name: {\n        type: DataTypes.STRING(80),\n        allowNull: false\n    },\n    adjudication: {\n        type: DataTypes.ENUM('-', 'ENGAGED', 'ADVERSE ACTION'),\n        allowNull: false\n    },\n    status: {\n        type: DataTypes.ENUM('CLEAR', 'CONSIDER'),\n        allowNull: false\n    },\n    location: {\n        type: DataTypes.STRING(30),\n        allowNull: false\n    },\n    application_date: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    email: {\n        type: DataTypes.STRING(60),\n        allowNull: false,\n        validate: {\n            isEmail: true\n        }\n    },\n    phone: {\n        type: DataTypes.STRING(15),\n        allowNull: false,\n        validate: {\n            isNumeric: true\n        }\n    },\n    zipcode: {\n        type: DataTypes.STRING(15),\n        allowNull: false\n    },\n    social_security: {\n        type: DataTypes.STRING(15),\n        allowNull: true,\n        validate: {\n            isNumeric: true\n        }\n    },\n    drivers_license: {\n        type: DataTypes.STRING(15),\n        allowNull: true\n    },\n    package: {\n        type: DataTypes.STRING(20),\n        allowNull: true\n    },\n    created_at: {\n        type: DataTypes.DATE,\n        allowNull: true\n    },\n    dob: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    completed_at: {\n        type: DataTypes.DATE,\n        allowNull: true\n    }\n}, {\n    tableName: 'candidate',\n    timestamps: false\n});\n\nexport default Candidate;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a76712338b63b4b3b9a9929388399e1ada1a0a20","contentHash":"070cbb17cf11518e5d30533bf660dcee921970db58cbbb7b539c2221875eb15c"},"/home/Ashp/Documents/be-checkr-node/backend/src/services/adverseActionService.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/services/adverseActionService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"16":{"start":{"line":16,"column":25},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":67}},"18":{"start":{"line":18,"column":22},"end":{"line":18,"column":71}},"19":{"start":{"line":19,"column":0},"end":{"line":66,"column":2}},"20":{"start":{"line":20,"column":48},"end":{"line":28,"column":6}},"21":{"start":{"line":21,"column":8},"end":{"line":27,"column":9}},"22":{"start":{"line":22,"column":34},"end":{"line":22,"column":96}},"23":{"start":{"line":23,"column":12},"end":{"line":23,"column":33}},"24":{"start":{"line":26,"column":12},"end":{"line":26,"column":60}},"25":{"start":{"line":29,"column":43},"end":{"line":50,"column":6}},"26":{"start":{"line":30,"column":8},"end":{"line":49,"column":9}},"27":{"start":{"line":31,"column":26},"end":{"line":31,"column":28}},"28":{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},"29":{"start":{"line":33,"column":16},"end":{"line":36,"column":18}},"30":{"start":{"line":38,"column":31},"end":{"line":38,"column":75}},"31":{"start":{"line":39,"column":35},"end":{"line":42,"column":26}},"32":{"start":{"line":43,"column":31},"end":{"line":43,"column":72}},"33":{"start":{"line":45,"column":12},"end":{"line":45,"column":62}},"34":{"start":{"line":48,"column":12},"end":{"line":48,"column":60}},"35":{"start":{"line":51,"column":52},"end":{"line":65,"column":6}},"36":{"start":{"line":52,"column":8},"end":{"line":64,"column":9}},"37":{"start":{"line":53,"column":31},"end":{"line":59,"column":14}},"38":{"start":{"line":60,"column":12},"end":{"line":60,"column":30}},"39":{"start":{"line":63,"column":12},"end":{"line":63,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":25},"end":{"line":20,"column":26}},"loc":{"start":{"line":20,"column":48},"end":{"line":28,"column":6}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":82},"end":{"line":20,"column":83}},"loc":{"start":{"line":20,"column":95},"end":{"line":28,"column":5}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":29,"column":26},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":43},"end":{"line":50,"column":6}},"line":29},"11":{"name":"(anonymous_11)","decl":{"start":{"line":29,"column":77},"end":{"line":29,"column":78}},"loc":{"start":{"line":29,"column":90},"end":{"line":50,"column":5}},"line":29},"12":{"name":"(anonymous_12)","decl":{"start":{"line":51,"column":34},"end":{"line":51,"column":35}},"loc":{"start":{"line":51,"column":52},"end":{"line":65,"column":6}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":86},"end":{"line":51,"column":87}},"loc":{"start":{"line":51,"column":99},"end":{"line":65,"column":5}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},{"start":{"line":32,"column":12},"end":{"line":37,"column":13}}],"line":32},"9":{"loc":{"start":{"line":43,"column":31},"end":{"line":43,"column":72}},"type":"cond-expr","locations":[{"start":{"line":43,"column":39},"end":{"line":43,"column":68}},{"start":{"line":43,"column":71},"end":{"line":43,"column":72}}],"line":43}},"s":{"0":1,"1":10,"2":0,"3":7,"4":7,"5":7,"6":0,"7":3,"8":3,"9":3,"10":14,"11":7,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":1,"24":1,"25":3,"26":3,"27":3,"28":3,"29":2,"30":3,"31":3,"32":2,"33":2,"34":1,"35":2,"36":2,"37":2,"38":1,"39":1},"f":{"0":7,"1":10,"2":0,"3":7,"4":7,"5":3,"6":14,"7":1,"8":2,"9":2,"10":3,"11":3,"12":2,"13":2},"b":{"0":[1,1,1],"1":[10,0],"2":[7,7],"3":[4,10],"4":[7,7],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[2,1],"9":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/services/adverseActionService.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/services/adverseActionService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,6DAAyD;AACzD,oEAA4C;AAC5C,wEAAqE;AACxD,QAAA,oBAAoB,GAAG;IAChC,mBAAmB,EAAG,CAAO,iBAAsB,EAAE,EAAE;QACnD,IAAI,CAAC;YACD,MAAM,aAAa,GAAG,MAAM,8BAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACpE,OAAO,aAAa,CAAC;QACzB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAA;IAEL,oBAAoB,EAAE,CAAO,IAAY,EAAE,KAAoB,EAAE,EAAE;QAC3D,IAAI,CAAC;YACD,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,KAAK,EAAE,CAAC;gBACR,OAAO,GAAG;oBACN,MAAM,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK;oBAC1B,KAAK,EAAE,KAAK;iBACf,CAAC;YACN,CAAC;YACD,MAAM,UAAU,GAAG,MAAM,8BAAa,CAAC,KAAK,EAAE,CAAC;YAC/C,MAAM,cAAc,GAAG,MAAM,8BAAa,CAAC,OAAO,iCAC3C,OAAO,KACV,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,mBAAS;wBAChB,UAAU,EAAE,CAAC,MAAM,CAAC;qBACvB,CAAC,IACJ,CAAC;YACH,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC;YAC9D,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;QACtD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAA;IACD,4BAA4B,EAAE,CAAO,YAAoB,EAAE,EAAE;QACzD,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,MAAM,8BAAa,CAAC,OAAO,CAAC;gBAC3C,KAAK,EAAE,EAAC,YAAY,EAAG,YAAY,EAAC;gBACpC,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,mBAAS;wBAChB,UAAU,EAAE,CAAC,MAAM,CAAC;qBACvB,CAAC;aACL,CAAC,CAAC;YACH,OAAO,UAAU,CAAC;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAA;CACJ,CAAA","sourcesContent":["import { AdverseAction } from \"../models/adverse_action\";\nimport Candidate from \"../models/candidate\";\nimport { GlobalError } from \"../utils/exceptionHandling/GlobalError\";\nexport const adverseActionService = {\n    createAdverseAction : async (adverseActionData: any) => {\n        try {\n            const adverseAction = await AdverseAction.create(adverseActionData);\n            return adverseAction;\n        } catch (error) {\n            throw new GlobalError(500, error as string);\n        }\n    },\n    \ngetAllAdverseActions: async (page: number, limit: number | null) => {\n        try {\n            let options = {};\n            if (limit) {\n                options = {\n                    offset: (page - 1) * limit,\n                    limit: limit\n                };\n            }\n            const totalCount = await AdverseAction.count();\n            const adverseActions = await AdverseAction.findAll({\n                ...options,\n                include: [{\n                    model: Candidate,\n                    attributes: ['name']\n                }]\n            });\n            const totalPages = limit ? Math.ceil(totalCount / limit) : 1;;\n            return { adverseActions, totalPages, totalCount };\n        } catch (error) {\n            throw new GlobalError(500, error as string);\n        }\n    },\n    getAdverseActionForCandidate: async (candidatesId: string) =>   {\n        try {\n            const candidates = await AdverseAction.findAll({ \n                where: {candidatesId:  candidatesId},\n                include: [{\n                    model: Candidate,\n                    attributes: ['name']\n                }]\n            });\n            return candidates;\n        } catch (error) {\n            throw new GlobalError(500, error as string);\n        }\n    },\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ded07f48d700ba2b3e77d86fe3b5ea36dbc0f6a","contentHash":"79e38e6f1865bc5ab4762a6b853c31c7f72cb80d12916c71ed3fc89f4ef8476c"},"/home/Ashp/Documents/be-checkr-node/backend/src/utils/exceptionHandling/GlobalError.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/utils/exceptionHandling/GlobalError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":37}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":59}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":37},"end":{"line":9,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":23,"3":23,"4":23,"5":1},"f":{"0":23},"b":{},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/utils/exceptionHandling/GlobalError.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/utils/exceptionHandling/GlobalError.ts"],"names":[],"mappings":";;;AAIA,MAAa,WAAY,SAAQ,KAAK;IAElC,YAAY,UAAkB,EAAE,OAAe;QAC3C,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,CAAA;IACtD,CAAC;CACJ;AAPD,kCAOC","sourcesContent":["export interface IGlobalError {\n    statusCode: number\n    message: string\n}\nexport class GlobalError extends Error {\n    statusCode: number\n    constructor(statusCode: number, message: string) {\n        super(message)\n        this.statusCode = statusCode\n        Object.setPrototypeOf(this, GlobalError.prototype)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"464e3bde98bc1b227916b7489f560297d9130a6b","contentHash":"265e53e5df7cb40cddc05ccef384da2c6a0b9b1014d802c6933dfa8f8fee85ff"},"/home/Ashp/Documents/be-checkr-node/backend/src/models/user.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":36}},"3":{"start":{"line":31,"column":13},"end":{"line":50,"column":2}},"4":{"start":{"line":51,"column":0},"end":{"line":51,"column":23}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/models/user.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/models/user.ts"],"names":[],"mappings":";;AAAA,yCAAsC;AACtC,qCAAwC;AAExC;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,IAAI,GAAG,aAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;IACjC,EAAE,EAAE;QACA,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,qBAAS,CAAC,MAAM;KACjC;IACD,IAAI,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACnB;IACD,KAAK,EAAE;QACH,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACnB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACnB;CACJ,CAAC,CAAA;AAEF,kBAAe,IAAI,CAAA","sourcesContent":["import { DataTypes } from \"sequelize\";\nimport { database } from \"../config/db\";\n\n/**\n * @openapi\n * components:\n *   schemas:\n *    User:\n *      type: object\n *      properties:\n *        id:\n *          type: string\n *          format: uuid\n *          description: The unique identifier for the user\n *        name:\n *          type: string\n *          description: The name of the user\n *        email:\n *          type: string\n *          format: email\n *          description: The email address of the user\n *        password:\n *          type: string\n *          description: The password of the user\n *      required:\n *        - name\n *        - email\n *        - password\n */\nconst User = database.define('User', {\n    id: {\n        type: DataTypes.UUID,\n        primaryKey: true,\n        allowNull: false,\n        defaultValue: DataTypes.UUIDV4\n    },\n    name: {\n        type: DataTypes.STRING,\n        allowNull: false\n    },\n    email: {\n        type: DataTypes.STRING,\n        allowNull: false\n    },\n    password: {\n        type: DataTypes.STRING,\n        allowNull: false\n    }\n})\n\nexport default User\n\n\nexport interface IUser { name: string, email: string, password: string }"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c831040b624f25b25eebb4abb121177fa7ddb2b0","contentHash":"256c509f3eedccb1b3ac5fbae29cc16cb86458ba022a3ea29b352ce1eccc5970"},"/home/Ashp/Documents/be-checkr-node/backend/src/services/authService.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/services/authService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":51}},"18":{"start":{"line":18,"column":22},"end":{"line":18,"column":71}},"19":{"start":{"line":19,"column":23},"end":{"line":19,"column":63}},"20":{"start":{"line":20,"column":0},"end":{"line":39,"column":2}},"21":{"start":{"line":21,"column":32},"end":{"line":38,"column":6}},"22":{"start":{"line":23,"column":8},"end":{"line":37,"column":9}},"23":{"start":{"line":24,"column":25},"end":{"line":24,"column":75}},"24":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"25":{"start":{"line":26,"column":16},"end":{"line":26,"column":29}},"26":{"start":{"line":28,"column":36},"end":{"line":28,"column":192}},"27":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":29}},"29":{"start":{"line":32,"column":26},"end":{"line":32,"column":155}},"30":{"start":{"line":33,"column":12},"end":{"line":33,"column":25}},"31":{"start":{"line":36,"column":12},"end":{"line":36,"column":89}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":12}},"loc":{"start":{"line":21,"column":32},"end":{"line":38,"column":6}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":66},"end":{"line":21,"column":67}},"loc":{"start":{"line":21,"column":79},"end":{"line":38,"column":5}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},{"start":{"line":25,"column":12},"end":{"line":27,"column":13}}],"line":25},"9":{"loc":{"start":{"line":28,"column":77},"end":{"line":28,"column":191}},"type":"cond-expr","locations":[{"start":{"line":28,"column":184},"end":{"line":28,"column":186}},{"start":{"line":28,"column":189},"end":{"line":28,"column":191}}],"line":28},"10":{"loc":{"start":{"line":28,"column":77},"end":{"line":28,"column":181}},"type":"binary-expr","locations":[{"start":{"line":28,"column":77},"end":{"line":28,"column":164}},{"start":{"line":28,"column":168},"end":{"line":28,"column":181}}],"line":28},"11":{"loc":{"start":{"line":28,"column":83},"end":{"line":28,"column":154}},"type":"cond-expr","locations":[{"start":{"line":28,"column":134},"end":{"line":28,"column":140}},{"start":{"line":28,"column":143},"end":{"line":28,"column":154}}],"line":28},"12":{"loc":{"start":{"line":28,"column":83},"end":{"line":28,"column":131}},"type":"binary-expr","locations":[{"start":{"line":28,"column":83},"end":{"line":28,"column":114}},{"start":{"line":28,"column":118},"end":{"line":28,"column":131}}],"line":28},"13":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29}},"s":{"0":1,"1":5,"2":1,"3":4,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":8,"11":4,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":4,"22":4,"23":4,"24":3,"25":1,"26":2,"27":2,"28":1,"29":1,"30":1,"31":1},"f":{"0":4,"1":5,"2":1,"3":4,"4":5,"5":0,"6":8,"7":3,"8":4,"9":4},"b":{"0":[1,1,1],"1":[4,1],"2":[4,4],"3":[3,5],"4":[4,4],"5":[1,1,1],"6":[1,2],"7":[3,3],"8":[1,2],"9":[1,1],"10":[2,2],"11":[1,1],"12":[2,2],"13":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/services/authService.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/services/authService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0DAAkC;AAClC,oDAA2B;AAC3B,wEAAqE;AACrE,gEAA8B;AAEjB,QAAA,WAAW,GAAG;IACvB,KAAK,EAAE,CAAO,KAAa,EAAE,QAAgB,EAAE,EAAE;;QAC7C,IAAI,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAEtD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACR,OAAO,KAAK,CAAC;YACjB,CAAC;YAED,MAAM,eAAe,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,QAAQ,mCAAI,EAAE,CAAC,CAAC;YAExF,IAAI,CAAC,eAAe,EAAE,CAAC;gBACnB,OAAO,KAAK,CAAC;YACjB,CAAC;YAED,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,iBAAiB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAE7H,OAAO,KAAK,CAAC;QACjB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,2BAA2B,KAAK,EAAE,CAAC,CAAC;QACnE,CAAC;IACL,CAAC,CAAA;CACJ,CAAC","sourcesContent":["import User from \"../models/user\";\nimport bcrypt from 'bcrypt'\nimport { GlobalError } from \"../utils/exceptionHandling/GlobalError\";\nimport jwt from 'jsonwebtoken'\n\nexport const authService = {\n    login: async (email: string, password: string) => {\n        try {\n            const user = await User.findOne({ where: { email } });\n\n            if (!user) {\n                return false;\n            }\n\n            const isPasswordValid = await bcrypt.compare(password, user.dataValues?.password ?? '');\n\n            if (!isPasswordValid) {\n                return false;\n            }\n\n            const token = jwt.sign({ userId: user.dataValues.id, email: user.dataValues.email }, 'your-secret-key', { expiresIn: '5m' });\n\n            return token;\n        } catch (error) {\n            throw new GlobalError(500, `Error while logging in: ${error}`);\n        }\n    }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cda28cbbd06b348cc1042602d0cf107cf444cd00","contentHash":"2fb70519db029ae82f5252269343a5bafa8bfad11ae3830c6851cd03b9e0ac16"},"/home/Ashp/Documents/be-checkr-node/backend/src/services/candidateService.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/services/candidateService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":40}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":67}},"18":{"start":{"line":18,"column":22},"end":{"line":18,"column":71}},"19":{"start":{"line":19,"column":21},"end":{"line":19,"column":42}},"20":{"start":{"line":20,"column":0},"end":{"line":102,"column":2}},"21":{"start":{"line":21,"column":41},"end":{"line":38,"column":6}},"22":{"start":{"line":22,"column":8},"end":{"line":37,"column":9}},"23":{"start":{"line":23,"column":26},"end":{"line":23,"column":28}},"24":{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},"25":{"start":{"line":25,"column":16},"end":{"line":28,"column":18}},"26":{"start":{"line":30,"column":31},"end":{"line":30,"column":73}},"27":{"start":{"line":31,"column":31},"end":{"line":31,"column":64}},"28":{"start":{"line":32,"column":31},"end":{"line":32,"column":72}},"29":{"start":{"line":33,"column":12},"end":{"line":33,"column":58}},"30":{"start":{"line":36,"column":12},"end":{"line":36,"column":79}},"31":{"start":{"line":39,"column":36},"end":{"line":47,"column":6}},"32":{"start":{"line":40,"column":8},"end":{"line":46,"column":9}},"33":{"start":{"line":41,"column":33},"end":{"line":41,"column":76}},"34":{"start":{"line":42,"column":12},"end":{"line":42,"column":32}},"35":{"start":{"line":45,"column":12},"end":{"line":45,"column":77}},"36":{"start":{"line":48,"column":32},"end":{"line":61,"column":6}},"37":{"start":{"line":49,"column":8},"end":{"line":60,"column":9}},"38":{"start":{"line":50,"column":30},"end":{"line":50,"column":68}},"39":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"40":{"start":{"line":52,"column":16},"end":{"line":52,"column":80}},"41":{"start":{"line":54,"column":12},"end":{"line":54,"column":29}},"42":{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},"43":{"start":{"line":58,"column":16},"end":{"line":58,"column":85}},"44":{"start":{"line":59,"column":12},"end":{"line":59,"column":60}},"45":{"start":{"line":62,"column":44},"end":{"line":76,"column":6}},"46":{"start":{"line":63,"column":8},"end":{"line":75,"column":9}},"47":{"start":{"line":64,"column":30},"end":{"line":64,"column":77}},"48":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"49":{"start":{"line":66,"column":16},"end":{"line":66,"column":80}},"50":{"start":{"line":68,"column":37},"end":{"line":68,"column":65}},"51":{"start":{"line":69,"column":12},"end":{"line":69,"column":36}},"52":{"start":{"line":72,"column":12},"end":{"line":73,"column":85}},"53":{"start":{"line":73,"column":16},"end":{"line":73,"column":85}},"54":{"start":{"line":74,"column":12},"end":{"line":74,"column":60}},"55":{"start":{"line":77,"column":47},"end":{"line":101,"column":6}},"56":{"start":{"line":78,"column":8},"end":{"line":100,"column":9}},"57":{"start":{"line":79,"column":31},"end":{"line":85,"column":14}},"58":{"start":{"line":86,"column":30},"end":{"line":90,"column":13}},"59":{"start":{"line":91,"column":30},"end":{"line":94,"column":14}},"60":{"start":{"line":95,"column":12},"end":{"line":95,"column":53}},"61":{"start":{"line":96,"column":12},"end":{"line":96,"column":43}},"62":{"start":{"line":99,"column":12},"end":{"line":99,"column":53}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":24},"end":{"line":21,"column":25}},"loc":{"start":{"line":21,"column":41},"end":{"line":38,"column":6}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":75},"end":{"line":21,"column":76}},"loc":{"start":{"line":21,"column":88},"end":{"line":38,"column":5}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":21},"end":{"line":39,"column":22}},"loc":{"start":{"line":39,"column":36},"end":{"line":47,"column":6}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":39,"column":70},"end":{"line":39,"column":71}},"loc":{"start":{"line":39,"column":83},"end":{"line":47,"column":5}},"line":39},"12":{"name":"(anonymous_12)","decl":{"start":{"line":48,"column":24},"end":{"line":48,"column":25}},"loc":{"start":{"line":48,"column":32},"end":{"line":61,"column":6}},"line":48},"13":{"name":"(anonymous_13)","decl":{"start":{"line":48,"column":66},"end":{"line":48,"column":67}},"loc":{"start":{"line":48,"column":79},"end":{"line":61,"column":5}},"line":48},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":21},"end":{"line":62,"column":22}},"loc":{"start":{"line":62,"column":44},"end":{"line":76,"column":6}},"line":62},"15":{"name":"(anonymous_15)","decl":{"start":{"line":62,"column":78},"end":{"line":62,"column":79}},"loc":{"start":{"line":62,"column":91},"end":{"line":76,"column":5}},"line":62},"16":{"name":"(anonymous_16)","decl":{"start":{"line":77,"column":23},"end":{"line":77,"column":24}},"loc":{"start":{"line":77,"column":47},"end":{"line":101,"column":6}},"line":77},"17":{"name":"(anonymous_17)","decl":{"start":{"line":77,"column":81},"end":{"line":77,"column":82}},"loc":{"start":{"line":77,"column":94},"end":{"line":101,"column":5}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":29,"column":13}},{"start":{"line":24,"column":12},"end":{"line":29,"column":13}}],"line":24},"9":{"loc":{"start":{"line":32,"column":31},"end":{"line":32,"column":72}},"type":"cond-expr","locations":[{"start":{"line":32,"column":39},"end":{"line":32,"column":68}},{"start":{"line":32,"column":71},"end":{"line":32,"column":72}}],"line":32},"10":{"loc":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},{"start":{"line":51,"column":12},"end":{"line":53,"column":13}}],"line":51},"11":{"loc":{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},{"start":{"line":57,"column":12},"end":{"line":58,"column":85}}],"line":57},"12":{"loc":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},{"start":{"line":65,"column":12},"end":{"line":67,"column":13}}],"line":65},"13":{"loc":{"start":{"line":72,"column":12},"end":{"line":73,"column":85}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":73,"column":85}},{"start":{"line":72,"column":12},"end":{"line":73,"column":85}}],"line":72}},"s":{"0":1,"1":8,"2":0,"3":11,"4":8,"5":8,"6":2,"7":0,"8":0,"9":0,"10":12,"11":11,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":1,"28":1,"29":1,"30":1,"31":2,"32":2,"33":2,"34":1,"35":1,"36":3,"37":3,"38":3,"39":2,"40":1,"41":1,"42":2,"43":1,"44":1,"45":3,"46":3,"47":3,"48":2,"49":1,"50":1,"51":1,"52":2,"53":1,"54":1,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1},"f":{"0":11,"1":8,"2":0,"3":11,"4":8,"5":0,"6":12,"7":1,"8":2,"9":2,"10":2,"11":2,"12":3,"13":3,"14":3,"15":3,"16":1,"17":1},"b":{"0":[1,1,1],"1":[8,0],"2":[11,11],"3":[4,8],"4":[11,11],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[2,0],"9":[1,0],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/services/candidateService.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/services/candidateService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,yCAA+B;AAC/B,oEAA2C;AAC3C,wEAAoE;AACpE,2CAAmD;AAEtC,QAAA,gBAAgB,GAAG;IAC5B,kBAAkB,EAAE,CAAO,IAAY,EAAE,KAAoB,EAAE,EAAE;QAC7D,IAAI,CAAC;YACD,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,KAAK,EAAE,CAAC;gBACR,OAAO,GAAG;oBACN,MAAM,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK;oBAC1B,KAAK,EAAE,KAAK;iBACf,CAAC;YACN,CAAC;YACD,MAAM,UAAU,GAAG,MAAM,mBAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpD,MAAM,UAAU,GAAG,MAAM,mBAAS,CAAC,KAAK,EAAE,CAAC;YAC3C,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;QAClD,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACX,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,kBAAkB,GAAG,GAAG,CAAC,CAAC;QACzD,CAAC;IACL,CAAC,CAAA;IACD,eAAe,EAAE,CAAO,SAAc,EAAE,EAAE;QACtC,IAAG,CAAC;YACA,MAAM,YAAY,GAAG,MAAM,mBAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YACtD,OAAO,YAAY,CAAA;QACvB,CAAC;QAAA,OAAM,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,gBAAgB,GAAE,GAAG,CAAC,CAAA;QACrD,CAAC;IACL,CAAC,CAAA;IACD,kBAAkB,EAAE,CAAM,EAAU,EAAE,EAAE;QACpC,IAAG,CAAC;YACA,MAAM,SAAS,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;YAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;YACtD,CAAC;YACD,OAAO,SAAS,CAAA;QACpB,CAAC;QAAA,OAAM,KAAK,EAAE,CAAC;YACX,IAAG,KAAK,YAAY,yBAAW;gBAAE,MAAM,IAAI,yBAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;YACvF,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAA;IACD,eAAe,EAAE,CAAO,WAAmB,EAAE,IAAS,EAAE,EAAE;QACtD,IAAI,CAAC;YACD,MAAM,SAAS,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,EAAE,CAAC;gBACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;YACtD,CAAC;YAED,MAAM,gBAAgB,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtD,OAAO,gBAAgB,CAAC;QAC5B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,IAAG,KAAK,YAAY,yBAAW;gBAAE,MAAM,IAAI,yBAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;YACvF,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;QAChD,CAAC;IACL,CAAC,CAAA;IACD,iBAAiB,EAAE,CAAO,SAAiB,EAAE,OAAe,EAAE,EAAE;QAC5D,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,MAAM,mBAAS,CAAC,OAAO,CAAC;gBACvC,KAAK,EAAE;oBACH,UAAU,EAAE;wBACR,CAAC,cAAE,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;qBACrC;iBACJ;aACJ,CAAC,CAAC;YACH,MAAM,SAAS,GAAG;gBACd,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;gBACzB,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;gBAC7B,EAAE,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;aAChD,CAAC;YAEF,MAAM,SAAS,GAAG,IAAA,kCAAqB,EAAC;gBACpC,IAAI,EAAE,uBAAuB;gBAC7B,MAAM,EAAE,SAAS;aACpB,CAAC,CAAC;YAEH,MAAM,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAEzC,OAAO,uBAAuB,CAAC;QACnC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7C,CAAC;IACL,CAAC,CAAA;CACJ,CAAA","sourcesContent":["import { Op } from \"sequelize\";\nimport Candidate from \"../models/candidate\"\nimport { GlobalError } from \"../utils/exceptionHandling/GlobalError\"\nimport { createObjectCsvWriter } from 'csv-writer';\n\nexport const candidateService = {\n    fetchAllCandidates: async (page: number, limit: number | null) => {\n        try {\n            let options = {};\n            if (limit) {\n                options = {\n                    offset: (page - 1) * limit,\n                    limit: limit\n                };\n            }\n            const candidates = await Candidate.findAll(options);\n            const totalCount = await Candidate.count();\n            const totalPages = limit ? Math.ceil(totalCount / limit) : 1;\n            return { candidates, totalCount, totalPages };\n        } catch (err) {\n            throw new GlobalError(500, 'Error occurred: ' + err);\n        }\n    },    \n    createCandidate: async (candidate: any) => {\n        try{\n            const newCandidate = await Candidate.create(candidate)\n            return newCandidate\n        }catch(err) {\n            throw new GlobalError(500, 'Error ocurred:'+ err)\n        }\n    },\n    fetchCandidateById: async(id: string) => {\n        try{\n            const candidate = await Candidate.findByPk(id)\n            if (!candidate) {\n                throw new GlobalError(404, 'Candidate not found');\n            }\n            return candidate\n        }catch(error) {\n            if(error instanceof GlobalError) throw new GlobalError(error.statusCode, error.message)\n            throw new GlobalError(500, error as string);\n        }\n    },\n    updateCandidate: async (candidateId: string, data: any) => {\n        try {\n            const candidate = await Candidate.findByPk(candidateId);\n            if (!candidate) {\n                throw new GlobalError(404, 'Candidate not found');\n            }\n    \n            const updatedCandidate = await candidate.update(data);\n    \n            return updatedCandidate;\n        } catch (error) {\n            if(error instanceof GlobalError) throw new GlobalError(error.statusCode, error.message)\n            throw new GlobalError(500, error as string);\n        }\n    },\n    generateCSVReport: async (startDate: string, endDate: string) => {\n        try {\n            const candidates = await Candidate.findAll({\n                where: {\n                    created_at: {\n                        [Op.between]: [startDate, endDate]\n                    }\n                }\n            });\n            const csvHeader = [\n                { id: 'id', title: 'ID' },\n                { id: 'name', title: 'Name' },\n                { id: 'adjudication', title: 'Adjudication' },\n            ];\n\n            const csvWriter = createObjectCsvWriter({\n                path: 'candidates_report.csv',\n                header: csvHeader\n            });\n\n            await csvWriter.writeRecords(candidates);\n\n            return 'candidates_report.csv';\n        } catch (error) {\n            throw new Error('Internal Server Error');\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"560cb5cb9a769d1f0a73edf0f05731c17c51676f","contentHash":"96a5886a282be8921ffbb9f0cbc8a8e5bb71fec3215d5f74b2dc080ba5fb5efd"},"/home/Ashp/Documents/be-checkr-node/backend/src/models/court_search.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/models/court_search.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":20},"end":{"line":27,"column":2}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/models/court_search.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/models/court_search.ts"],"names":[],"mappings":";;AAAA,yCAAsC;AACtC,qCAAwC;AAsCxC,MAAM,WAAW,GAAG,aAAQ,CAAC,MAAM,CAAC,aAAa,EAAE;IAC/C,EAAE,EAAE;QACA,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,qBAAS,CAAC,MAAM;KACjC;IACD,IAAI,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,SAAS,EAAE,KAAK;KACnB;IACD,MAAM,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;QACzC,SAAS,EAAE,KAAK;KACnB;IACD,iBAAiB,EAAE;QACf,IAAI,EAAE,qBAAS,CAAC,QAAQ;QACxB,SAAS,EAAE,KAAK;KACnB;CACJ,EAAE;IACC,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE,KAAK;CACpB,CAAC,CAAC;AAEH,kBAAe,WAAW,CAAC","sourcesContent":["import { DataTypes } from 'sequelize';\nimport { database } from '../config/db';\n\n/**\n * @openapi\n * components:\n *   schemas:\n *     CourtSearch:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *           format: uuid\n *           description: The unique identifier for the court search\n *         name:\n *           type: string\n *           maxLength: 45\n *           description: The name of the court search\n *         status:\n *           type: string\n *           enum: [\"CLEAR\", \"CONSIDER\"]\n *           description: The status of the court search\n *         verification_date:\n *           type: string\n *           format: date\n *           description: The date of verification for the court search\n *       required:\n *         - name\n *         - status\n *         - verification_date\n */\n\nexport interface ICourtSearch {\n    id: string;\n    name: string;\n    status: 'CLEAR' | 'CONSIDER';\n    verification_date: Date;\n}\n\nconst CourtSearch = database.define('CourtSearch', {\n    id: {\n        type: DataTypes.UUID,\n        primaryKey: true,\n        allowNull: false,\n        defaultValue: DataTypes.UUIDV4,\n    },\n    name: {\n        type: DataTypes.STRING(45),\n        allowNull: false,\n    },\n    status: {\n        type: DataTypes.ENUM('CLEAR', 'CONSIDER'),\n        allowNull: false,\n    },\n    verification_date: {\n        type: DataTypes.DATEONLY,\n        allowNull: false,\n    },\n}, {\n    tableName: 'court_search',\n    timestamps: false,\n});\n\nexport default CourtSearch;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b321add720b7c091afd3eea6982c99acedf1bd4","contentHash":"20ba48a236d6b55d1b14f1b6ae396f3c8243cb1d97cf87b079efe7d578cef69e"},"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate_court_search.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate_court_search.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":36}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":65}},"7":{"start":{"line":10,"column":29},"end":{"line":24,"column":2}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":39}},"9":{"start":{"line":26,"column":0},"end":{"line":30,"column":3}},"10":{"start":{"line":31,"column":0},"end":{"line":35,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate_court_search.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/models/candidate_court_search.ts"],"names":[],"mappings":";;;;;AAAA,yCAAsC;AACtC,qCAAwC;AACxC,4DAAoC;AACpC,kEAAyC;AAEzC,MAAM,oBAAoB,GAAG,aAAQ,CAAC,MAAM,CAAC,wBAAwB,EAAE;IACnE,YAAY,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,IAAI;KACnB;IACD,eAAe,EAAE;QACb,IAAI,EAAE,qBAAS,CAAC,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,IAAI;KACnB;CACJ,EAAE;IACC,SAAS,EAAE,wBAAwB;IACnC,UAAU,EAAE,KAAK;CACpB,CAAC,CAAC;AAEH,kBAAe,oBAAoB,CAAC;AAEpC,mBAAS,CAAC,aAAa,CAAC,sBAAW,EAAE;IACjC,OAAO,EAAE,oBAAoB;IAC7B,UAAU,EAAE,cAAc;IAC1B,QAAQ,EAAE,iBAAiB;CAC9B,CAAC,CAAC;AACH,sBAAW,CAAC,aAAa,CAAC,mBAAS,EAAE;IACjC,OAAO,EAAE,oBAAoB;IAC7B,UAAU,EAAE,iBAAiB;IAC7B,QAAQ,EAAE,cAAc;CAC3B,CAAC,CAAC","sourcesContent":["import { DataTypes } from 'sequelize';\nimport { database } from '../config/db';\nimport Candidate from './candidate';\nimport CourtSearch from './court_search';\n\nconst CandidateCourtSearch = database.define('candidate_court_search', {\n    candidate_id: {\n        type: DataTypes.UUID,\n        allowNull: false,\n        primaryKey: true,\n    },\n    court_search_id: {\n        type: DataTypes.UUID,\n        allowNull: false,\n        primaryKey: true,\n    },\n}, {\n    tableName: 'candidate_court_search',\n    timestamps: false,\n});\n\nexport default CandidateCourtSearch;\n\nCandidate.belongsToMany(CourtSearch, {\n    through: CandidateCourtSearch,\n    foreignKey: 'candidate_id',\n    otherKey: 'court_search_id',\n});\nCourtSearch.belongsToMany(Candidate, {\n    through: CandidateCourtSearch,\n    foreignKey: 'court_search_id',\n    otherKey: 'candidate_id',\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"46f7cd25b167065058692e463cad666a416504c6","contentHash":"4c316b3526d14c5c404c796dc20dd304901ff706c58b8d8ae6d5ab8797e0e56a"},"/home/Ashp/Documents/be-checkr-node/backend/src/services/courtSearchService.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/services/courtSearchService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":67}},"17":{"start":{"line":17,"column":33},"end":{"line":17,"column":93}},"18":{"start":{"line":18,"column":23},"end":{"line":18,"column":73}},"19":{"start":{"line":19,"column":22},"end":{"line":19,"column":71}},"20":{"start":{"line":20,"column":0},"end":{"line":62,"column":2}},"21":{"start":{"line":21,"column":57},"end":{"line":33,"column":6}},"22":{"start":{"line":22,"column":8},"end":{"line":32,"column":9}},"23":{"start":{"line":23,"column":32},"end":{"line":23,"column":84}},"24":{"start":{"line":24,"column":12},"end":{"line":27,"column":15}},"25":{"start":{"line":28,"column":12},"end":{"line":28,"column":31}},"26":{"start":{"line":31,"column":12},"end":{"line":31,"column":96}},"27":{"start":{"line":34,"column":31},"end":{"line":42,"column":6}},"28":{"start":{"line":35,"column":8},"end":{"line":41,"column":9}},"29":{"start":{"line":36,"column":34},"end":{"line":36,"column":72}},"30":{"start":{"line":37,"column":12},"end":{"line":37,"column":33}},"31":{"start":{"line":40,"column":12},"end":{"line":40,"column":95}},"32":{"start":{"line":43,"column":55},"end":{"line":61,"column":6}},"33":{"start":{"line":44,"column":8},"end":{"line":60,"column":9}},"34":{"start":{"line":45,"column":43},"end":{"line":51,"column":14}},"35":{"start":{"line":52,"column":12},"end":{"line":53,"column":115}},"36":{"start":{"line":53,"column":16},"end":{"line":53,"column":115}},"37":{"start":{"line":54,"column":12},"end":{"line":54,"column":42}},"38":{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},"39":{"start":{"line":58,"column":16},"end":{"line":58,"column":85}},"40":{"start":{"line":59,"column":12},"end":{"line":59,"column":97}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":57},"end":{"line":33,"column":6}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":91},"end":{"line":21,"column":92}},"loc":{"start":{"line":21,"column":104},"end":{"line":33,"column":5}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":25},"end":{"line":34,"column":26}},"loc":{"start":{"line":34,"column":31},"end":{"line":42,"column":6}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":65},"end":{"line":34,"column":66}},"loc":{"start":{"line":34,"column":78},"end":{"line":42,"column":5}},"line":34},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":38},"end":{"line":43,"column":39}},"loc":{"start":{"line":43,"column":55},"end":{"line":61,"column":6}},"line":43},"13":{"name":"(anonymous_13)","decl":{"start":{"line":43,"column":89},"end":{"line":43,"column":90}},"loc":{"start":{"line":43,"column":102},"end":{"line":61,"column":5}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":52,"column":12},"end":{"line":53,"column":115}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":53,"column":115}},{"start":{"line":52,"column":12},"end":{"line":53,"column":115}}],"line":52},"9":{"loc":{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":58,"column":85}},{"start":{"line":57,"column":12},"end":{"line":58,"column":85}}],"line":57}},"s":{"0":1,"1":5,"2":1,"3":7,"4":5,"5":5,"6":1,"7":0,"8":0,"9":0,"10":8,"11":7,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":2,"28":2,"29":2,"30":1,"31":1,"32":3,"33":3,"34":3,"35":2,"36":1,"37":1,"38":2,"39":1,"40":1},"f":{"0":7,"1":5,"2":1,"3":7,"4":5,"5":0,"6":8,"7":3,"8":2,"9":2,"10":2,"11":2,"12":3,"13":3},"b":{"0":[1,1,1],"1":[4,1],"2":[7,7],"3":[3,5],"4":[7,7],"5":[1,1,1],"6":[3,0],"7":[3,3],"8":[1,1],"9":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/services/courtSearchService.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/services/courtSearchService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oEAA4C;AAC5C,8FAAoE;AACpE,0EAAiD;AACjD,wEAAqE;AAExD,QAAA,kBAAkB,GAAG;IAC9B,iBAAiB,EAAE,CAAO,eAAoB,EAAE,WAAmB,EAAE,EAAE;QACnE,IAAI,CAAC;YACD,MAAM,WAAW,GAAG,MAAM,sBAAW,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAE9D,MAAM,gCAAoB,CAAC,MAAM,CAAC;gBAC9B,YAAY,EAAE,WAAW;gBACzB,eAAe,EAAE,WAAW,CAAC,UAAU,CAAC,EAAE;aAC7C,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,kCAAkC,KAAK,EAAE,CAAC,CAAC;QAC1E,CAAC;IACL,CAAC,CAAA;IACD,mBAAmB,EAAE,GAAS,EAAE;QAC5B,IAAI,CAAC;YACD,MAAM,aAAa,GAAG,MAAM,sBAAW,CAAC,OAAO,EAAE,CAAC;YAClD,OAAO,aAAa,CAAC;QACzB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,iCAAiC,KAAK,EAAE,CAAC,CAAC;QACzE,CAAC;IACL,CAAC,CAAA;IACD,gCAAgC,EAAE,CAAO,WAAmB,EAAE,EAAE;QAC5D,IAAI,CAAC;YACD,MAAM,sBAAsB,GAAG,MAAM,sBAAW,CAAC,OAAO,CAAC;gBACrD,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE;wBAC1B,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;wBAC7B,KAAK,EAAE,mBAAS;qBACnB,CAAC;aACL,CAAC,CAAC;YACH,IAAG,CAAC,sBAAsB;gBAAE,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,0CAA0C,GAAC,WAAW,CAAC,CAAA;YAE9G,OAAO,sBAAsB,CAAC;QAClC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,IAAG,KAAK,YAAY,yBAAW;gBAAE,MAAM,IAAI,yBAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;YACvF,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,mCAAmC,KAAK,EAAE,CAAC,CAAC;QAC3E,CAAC;IACL,CAAC,CAAA;CACJ,CAAA","sourcesContent":["import Candidate from \"../models/candidate\";\nimport CandidateCourtSearch from \"../models/candidate_court_search\";\nimport CourtSearch from \"../models/court_search\";\nimport { GlobalError } from '../utils/exceptionHandling/GlobalError';\n\nexport const courtSearchService = {\n    createCourtSearch: async (courtSearchData: any, candidateId: string) => {\n        try {\n            const courtSearch = await CourtSearch.create(courtSearchData);\n    \n            await CandidateCourtSearch.create({\n                candidate_id: candidateId,\n                court_search_id: courtSearch.dataValues.id\n            });\n    \n            return courtSearch;\n        } catch (error) {\n            throw new GlobalError(500, `Failed to create court search: ${error}`);\n        }\n    },    \n    getAllCourtSearches: async () => {\n        try {\n            const courtSearches = await CourtSearch.findAll();\n            return courtSearches;\n        } catch (error) {\n            throw new GlobalError(500, `Failed to get court searches: ${error}`);\n        }\n    },\n    getAllCourtSearchesByCandidateId: async (candidateId: string) =>   {\n        try {\n            const candidateCourtSearches = await CourtSearch.findAll({\n                include: [{\n                    where: { id: candidateId },\n                    attributes: ['name', 'email'],\n                    model: Candidate\n                }]\n            });\n            if(!candidateCourtSearches) throw new GlobalError(404, \"Court searches not found for candidate: \"+candidateId)\n    \n            return candidateCourtSearches;\n        } catch (error) {\n            if(error instanceof GlobalError) throw new GlobalError(error.statusCode, error.message)\n            throw new GlobalError(500, `Failed to fetch court searches: ${error}`);\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fb985e0a6c434b5da7257465703a81ffb7098f29","contentHash":"c0c0f64fc2c8af6de275c735e0897bb817127c9c1b458c7f61cad98bd4cc210f"},"/home/Ashp/Documents/be-checkr-node/backend/src/services/userService.ts":{"path":"/home/Ashp/Documents/be-checkr-node/backend/src/services/userService.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":22},"end":{"line":17,"column":71}},"18":{"start":{"line":18,"column":17},"end":{"line":18,"column":51}},"19":{"start":{"line":19,"column":0},"end":{"line":57,"column":2}},"20":{"start":{"line":20,"column":30},"end":{"line":37,"column":6}},"21":{"start":{"line":21,"column":8},"end":{"line":36,"column":9}},"22":{"start":{"line":22,"column":33},"end":{"line":22,"column":99}},"23":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"24":{"start":{"line":24,"column":16},"end":{"line":24,"column":96}},"25":{"start":{"line":26,"column":46},"end":{"line":26,"column":54}},"26":{"start":{"line":27,"column":35},"end":{"line":27,"column":76}},"27":{"start":{"line":28,"column":28},"end":{"line":28,"column":98}},"28":{"start":{"line":29,"column":12},"end":{"line":29,"column":33}},"29":{"start":{"line":30,"column":12},"end":{"line":30,"column":27}},"30":{"start":{"line":33,"column":12},"end":{"line":34,"column":113}},"31":{"start":{"line":34,"column":16},"end":{"line":34,"column":113}},"32":{"start":{"line":35,"column":12},"end":{"line":35,"column":90}},"33":{"start":{"line":38,"column":31},"end":{"line":41,"column":6}},"34":{"start":{"line":39,"column":21},"end":{"line":39,"column":78}},"35":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"36":{"start":{"line":42,"column":49},"end":{"line":56,"column":6}},"37":{"start":{"line":43,"column":8},"end":{"line":55,"column":9}},"38":{"start":{"line":44,"column":33},"end":{"line":44,"column":70}},"39":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"40":{"start":{"line":46,"column":16},"end":{"line":46,"column":94}},"41":{"start":{"line":48,"column":32},"end":{"line":48,"column":84}},"42":{"start":{"line":49,"column":12},"end":{"line":49,"column":31}},"43":{"start":{"line":52,"column":12},"end":{"line":53,"column":70}},"44":{"start":{"line":53,"column":16},"end":{"line":53,"column":70}},"45":{"start":{"line":54,"column":12},"end":{"line":54,"column":99}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":17}},"loc":{"start":{"line":20,"column":30},"end":{"line":37,"column":6}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":64},"end":{"line":20,"column":65}},"loc":{"start":{"line":20,"column":77},"end":{"line":37,"column":5}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":20},"end":{"line":38,"column":21}},"loc":{"start":{"line":38,"column":31},"end":{"line":41,"column":6}},"line":38},"11":{"name":"(anonymous_11)","decl":{"start":{"line":38,"column":65},"end":{"line":38,"column":66}},"loc":{"start":{"line":38,"column":78},"end":{"line":41,"column":5}},"line":38},"12":{"name":"(anonymous_12)","decl":{"start":{"line":42,"column":24},"end":{"line":42,"column":25}},"loc":{"start":{"line":42,"column":49},"end":{"line":56,"column":6}},"line":42},"13":{"name":"(anonymous_13)","decl":{"start":{"line":42,"column":83},"end":{"line":42,"column":84}},"loc":{"start":{"line":42,"column":96},"end":{"line":56,"column":5}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{"line":23,"column":12},"end":{"line":25,"column":13}}],"line":23},"9":{"loc":{"start":{"line":33,"column":12},"end":{"line":34,"column":113}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":34,"column":113}},{"start":{"line":33,"column":12},"end":{"line":34,"column":113}}],"line":33},"10":{"loc":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},{"start":{"line":45,"column":12},"end":{"line":47,"column":13}}],"line":45},"11":{"loc":{"start":{"line":52,"column":12},"end":{"line":53,"column":70}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":53,"column":70}},{"start":{"line":52,"column":12},"end":{"line":53,"column":70}}],"line":52}},"s":{"0":1,"1":10,"2":4,"3":7,"4":10,"5":10,"6":3,"7":0,"8":0,"9":0,"10":13,"11":7,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":3,"21":3,"22":3,"23":3,"24":1,"25":2,"26":2,"27":2,"28":1,"29":1,"30":2,"31":1,"32":1,"33":1,"34":1,"35":1,"36":3,"37":3,"38":3,"39":2,"40":1,"41":1,"42":1,"43":2,"44":1,"45":1},"f":{"0":7,"1":10,"2":4,"3":7,"4":10,"5":0,"6":13,"7":2,"8":3,"9":3,"10":1,"11":1,"12":3,"13":3},"b":{"0":[1,1,1],"1":[6,4],"2":[7,7],"3":[3,10],"4":[7,7],"5":[1,1,1],"6":[1,1],"7":[2,2],"8":[1,2],"9":[1,1],"10":[1,1],"11":[1,1]},"inputSourceMap":{"version":3,"file":"/home/Ashp/Documents/be-checkr-node/backend/src/services/userService.ts","sources":["/home/Ashp/Documents/be-checkr-node/backend/src/services/userService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0DAA6C;AAC7C,wEAAqE;AACrE,oDAA4B;AAGf,QAAA,WAAW,GAAG;IACvB,UAAU,EAAE,CAAO,QAAe,EAAE,EAAE;QAClC,IAAI,CAAC;YACD,MAAM,YAAY,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC9E,IAAI,YAAY,EAAE,CAAC;gBACf,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;YACtE,CAAC;YACD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;YAC3C,MAAM,cAAc,GAAG,MAAM,gBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YACvD,MAAM,OAAO,GAAG,MAAM,cAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC,CAAC;YAC7E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACpB,OAAO,OAAO,CAAC;QACnB,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACX,IAAG,GAAG,YAAY,yBAAW;gBAAE,MAAM,IAAI,yBAAW,CAAC,GAAG,CAAC,UAAU,EAAE,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAClH,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,8BAA8B,GAAG,EAAE,CAAC,CAAC;QACpE,CAAC;IACL,CAAC,CAAA;IAGD,cAAc,EAAE,CAAO,KAAa,EAAE,EAAE;QACpC,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC;IAChB,CAAC,CAAA;IACD,kBAAkB,EAAE,CAAO,MAAc,EAAE,WAAmB,EAAE,EAAE;QAC9D,IAAI,CAAC;YACD,MAAM,YAAY,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;gBAChB,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,0BAA0B,GAAC,MAAM,CAAC,CAAC;YAClE,CAAC;YACD,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;YACzE,OAAO,WAAW,CAAC;QACvB,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACX,IAAG,GAAG,YAAY,yBAAW;gBACzB,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YAC5C,MAAM,IAAI,yBAAW,CAAC,GAAG,EAAE,sCAAsC,GAAG,GAAG,CAAC,CAAC;QAC7E,CAAC;IACL,CAAC,CAAA;CACJ,CAAC","sourcesContent":["import User, { IUser } from \"../models/user\";\nimport { GlobalError } from \"../utils/exceptionHandling/GlobalError\";\nimport bcrypt from 'bcrypt';\n\n\nexport const userService = {\n    createUser: async (userData: IUser) => {\n        try {\n            const existingUser = await User.findOne({ where: { email: userData.email } });\n            if (existingUser) {\n                throw new GlobalError(409, 'User with this email already exists');\n            }\n            const { name, email, password } = userData;\n            const hashedPassword = await bcrypt.hash(password, 10);\n            const newUser = await User.create({ name, email, password: hashedPassword });\n            console.log(newUser)\n            return newUser;\n        } catch (err) {\n            if(err instanceof GlobalError) throw new GlobalError(err.statusCode, `Error while creating user: ${err.message}`);\n            throw new GlobalError(500, `Error while creating user: ${err}`);\n        }\n    },\n    \n\n    getUserByEmail: async (email: string) => {\n        const user = await User.findOne({ where: {email: email} });\n        return user;\n    },\n    updateUserPassword: async (userId: string, newPassword: string) => {\n        try {\n            const existingUser = await User.findByPk(userId);\n            if (!existingUser) {\n                throw new GlobalError(404, \"User not found with id: \"+userId);\n            }\n            const updatedUser = await existingUser.update({ password: newPassword });\n            return updatedUser;\n        } catch (err) {\n            if(err instanceof GlobalError)\n                throw new GlobalError(404, err.message);\n            throw new GlobalError(500, \"Error while updating user password: \" + err);\n        }\n    }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"40701d03d370067f675bcf20c2ef99609ecfae61","contentHash":"bdd0a0a2116e52d90c153f6d832febee5ed5f5d3cc8be645bd43e874904a5be8"}}